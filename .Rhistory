colnames(Athenas)[colnames(Athenas) == "Height (cm)"] <- "Height"
colnames(Athenas)[colnames(Athenas) == "Weight (lbs)"] <- "Weight"
Athenas$Year <- 2004
colnames(Beijing)[colnames(Beijing) == "Names"] <- "Name"
Beijing$Year <- 2008
London$Year <- 2012
colnames(Rio)[colnames(Rio) == "Age_year"] <- "Age"
colnames(Rio)[colnames(Rio) == "Height_cm"] <- "Height"
colnames(Rio)[colnames(Rio) == "Weight_lbs"] <- "Weight"
colnames(Rio)[colnames(Rio) == "Country"] <- "Team"
Rio$Year <- 2016
colnames(Sydney)[colnames(Sydney) == "N4m3"] <- "Name"
colnames(Sydney)[colnames(Sydney) == "S3x"] <- "Sex"
colnames(Sydney)[colnames(Sydney) == "4g3"] <- "Age"
colnames(Sydney)[colnames(Sydney) == "H31ght"] <- "Height"
colnames(Sydney)[colnames(Sydney) == "W31ght"] <- "Weight"
colnames(Sydney)[colnames(Sydney) == "T34m"] <- "Team"
colnames(Sydney)[colnames(Sydney) == "Sp0rt"] <- "Sport"
colnames(Sydney)[colnames(Sydney) == "3v3nt"] <- "Event"
colnames(Sydney)[colnames(Sydney) == "M3d4l"] <- "Medal"
Sydney$Year <- 2000
Olimpiadas <- rbind(Athenas, Beijing, London, Rio, Sydney)
## Analise 1 - Top paises medalhistas
Medalhistas_mulheres <- Olimpiadas %>%
filter(Sex == "F" & !is.na(Medal)) %>%
group_by(Team) %>%
summarise(total_medalhas = n()) %>%
arrange(desc(total_medalhas))
top_5 <- head(Medalhistas_mulheres, 5)
top_5_grafico <- ggplot(top_5, aes(x = reorder(Team, total_medalhas), y = total_medalhas)) +
geom_bar(stat = "identity", fill = "#a11d21") +  # Cor das barras
coord_flip() +
labs(title =,
x = "País",
y = "Número de Medalhas") +
theme_estat() +
geom_text(aes(label = total_medalhas),
position = position_stack(vjust = 1),
hjust = -0.1,  # Ajuste horizontal para posicionar o texto
color = "black")  # Cor do texto
print(top_5_grafico)
## Analise 2 - Análise 2 - Valor IMC por esporte
#Calculo IMC
Olimpiadas$Weight_kg <- Olimpiadas$Weight * 0.453592  # Converter peso para kg
Olimpiadas$Height_m <- Olimpiadas$Height / 100     # Converter altura para m
Olimpiadas$IMC <- Olimpiadas$Weight_kg / (Olimpiadas$Height_m^2)# Calcular IMC
#iIMC por esporte
esportes_desejados <- c("Gymnastics", "Football", "Judo", "Athletics", "Badminton")
IMC_filtrado <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%  # Filtra os esportes
group_by(Sport) %>%                        # Agrupa por esporte
summarise(
media_imc = mean(IMC, na.rm = TRUE),      # Média do IMC
sd_imc = sd(IMC, na.rm = TRUE),          # Desvio padrão do IMC
n = n()                                   # Número de atletas por esporte
)
# Visualização
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(color = "black") +
labs(title = "Figura 2 - Distribuição do IMC por Esporte",
x = "Esporte",
y = "IMC") +
theme_estat()
# ANOVA para comparar os IMCs entre os esportes
anova_resultado <- aov(IMC ~ Sport, data = Olimpiadas)
summary(anova_resultado)
tabela_1<- kable(IMC_filtrado, caption = "Tabela 1 - Resumo do IMC por Esporte")
IMC_por_esporte_grafico
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(color = "black") +
labs(title = "Figura 2 - Distribuição do IMC por Esporte",
x = "Atletismo","Badminton","Futebol","Ginastica", "Judo"
y = "IMC") +
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(color = "black") +
labs(title = "Figura 2 - Distribuição do IMC por Esporte",
x = "Esportes",
y = "IMC") +
theme_estat()
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(color = "black") +
labs(title = "Figura 2 - Distribuição do IMC por Esporte",
x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
IMC_por_esporte_grafico
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(color = "black") +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
IMC_por_esporte_grafico
IMC_por_esporte_grafico2 <-ggplot(mpg) +
aes(x = reorder(trans, cty, FUN = median), y = cty) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 3, fill = "white
"
) +
labs(x = "Esportes", y = "IMC") +
theme_estat()
ggsave("box_bi.pdf", width = 158, height = 93, units = "mm")
IMC_por_esporte_grafico2 <-ggplot(mpg) +
aes(x = reorder(trans, cty, FUN = median), y = cty) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 3, fill = "white"
) +
labs(x = "Esportes", y = "IMC") +
theme_estat()
ggsave("box_bi.pdf", width = 158, height = 93, units = "mm")
IMC_por_esporte_grafico2
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(color = "black") +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
ggsave("box_bi.pdf", width = 158, height = 93,)
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
IMC_por_esporte_grafico
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 3, fill = "white"
) +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
IMC_por_esporte_grafico
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 2, fill = "white"
) +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
IMC_por_esporte_grafico
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 2, fill = "white"
) +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
mpg %>%
print_quadro_resumo(var_name = "imc")
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = mean(IMC, na.rm = TRUE),
Variancia_IMC = var(IMC, na.rm = TRUE)
)
tabela_IMC
tabela_IMC
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = round(mean(IMC, na.rm = TRUE), 2),
Variancia_IMC = round(var(IMC, na.rm = TRUE), 2)
) %>%
rename(
Esporte = Sport,
`Média do IMC` = Media,
`Variância do IMC` = Variancia
)
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = round(mean(IMC, na.rm = TRUE), 2),
Variancia_IMC = round(var(IMC, na.rm = TRUE), 2)
) %>%
rename(
Esporte = Sport,
`Média` = Media_IMC,
`Variância` = Variancia_IMC
)
# Criar a tabela em português
tabela_formatada <- kable(tabela_IMC, format = "latex", booktabs = TRUE, escape = FALSE) %>%
kable_styling(latex_options = "striped", full_width = FALSE)
library(readxl)
library(dplyr)
library(ggplot2)
library(pacman)
library(knitr)
install.packages("kableExtra")
library(kableExtra)
tabela_IMC2 <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = mean(IMC, na.rm = TRUE),
Variancia_IMC = var(IMC, na.rm = TRUE)
) %>%
mutate(
Sport = recode(Sport,
"Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô"),
Media_IMC = round(Media_IMC, 2),
Variancia_IMC = round(Variancia_IMC, 2)
)
tabela_IMC2
tabela_IMC %>%
kable("latex", caption = "Tabela 1 - Média e Variância do IMC por Esporte") %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabela_IMC.pdf")
tabela_IMC
tabela_IMC.pdf
tabela_IMC %>%
kable("latex", caption = "Tabela 1 - Média e Variância do IMC por Esporte") %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabela_IMC.pdf")
tabela_IMC
tabela_IMC
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = mean(IMC, na.rm = TRUE),
Variancia_IMC = var(IMC, na.rm = TRUE)
) %>%
mutate(
Sport = recode(Sport,
"Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô"),
Media_IMC = round(Media_IMC, 2),
Variancia_IMC = round(Variancia_IMC, 2)
)
tabela_IMC
tabela_IMC
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = mean(IMC, na.rm = TRUE),
Variancia_IMC = var(IMC, na.rm = TRUE)
) %>%
mutate(
Sport = recode(Sport,
"Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô"),
Media_IMC = round(Media_IMC, 2),
Variancia_IMC = round(Variancia_IMC, 2)
)
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = mean(IMC, na.rm = TRUE),
Variancia_IMC = var(IMC, na.rm = TRUE)
) %>%
mutate(
Sport = recode(Sport,
"Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô"),
Media_IMC = round(Media_IMC, 2),
Variancia_IMC = round(Variancia_IMC, 2)
) %>%
rename(
Esporte = Sport,
`Média IMC` = Media_IMC,
`Variância IMC` = Variancia_IMC
)
tabela_IMC
tabela_IMC
tabela_IMC %>%
kable("latex", col.names = c("Esporte", "Média IMC", "Variância IMC"),
caption = "Tabela 1 - Média e Variância do IMC por Esporte",
booktabs = TRUE) %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabela_IMC.pdf")
tabela_IMC %>%
kable("latex", col.names = c("Esporte", "Média IMC", "Variância IMC"),
caption = "Tabela 1 - Média e Variância do IMC por Esporte",
booktabs = TRUE) %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabelaIMC2.pdf")
library(tinytex)
tabela_IMC %>%
kable("latex", col.names = c("Esporte", "Média IMC", "Variância IMC"),
caption = "Tabela 1 - Média e Variância do IMC por Esporte",
booktabs = TRUE) %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabelaIMC2.pdf")
install.packages("gt")
library(gt)
gtsave(tabela_IMC_gt, "tabela_IMC.pdf")
gtsave(tabela_IMC, "tabela_IMC.pdf")
tlmgr install standalone everysel preview doublestroke setspace rsfs relsize ragged2e fundus-calligra microtype wasysym physics dvisvgm jknapltx wasy cm-super babel-english
tabela_IMC %>%
kable("latex", col.names = c("Esporte", "Média IMC", "Variância IMC"),
caption = "Tabela 1 - Média e Variância do IMC por Esporte",
booktabs = TRUE) %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabela_IMC.pdf")
tinytex::tlmgr_install("standalone")
tabela_IMC %>%
kable("latex", col.names = c("Esporte", "Média IMC", "Variância IMC"),
caption = "Tabela 1 - Média e Variância do IMC por Esporte",
booktabs = TRUE) %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabela_IMC.pdf")
tinytex::install_tinytex(force = TRUE)
tinytex::tinytex_root()
tabela_IMC %>%
kable("latex", col.names = c("Esporte", "Média IMC", "Variância IMC"),
caption = "Tabela 1 - Média e Variância do IMC por Esporte",
booktabs = TRUE) %>%
kable_styling(latex_options = "striped") %>%
save_kable("tabela_IMC.pdf")
IMC_por_esporte_grafico
#tabela_IMC
#tabela_IMC
#não to conseguindo fazer essa tabela em latex ou passar pra pdf
medalhas_top3 <- Olimpiadas %>%
filter(Name %in% top3_nomes$Name) %>%
group_by(Name) %>%
summarise(total_medalhas = sum(Medal))
medalhas_top3 <- Olimpiadas %>%
filter(Name %in% top3_nomes$Name) %>%
group_by(Name) %>%
summarise(total_medalhas = sum(Medal))
library(readxl)
library(dplyr)
library(ggplot2)
library(pacman)
library(knitr)
library(kableExtra)
library(tinytex)
library(gt)
suppressMessages(suppressWarnings(
suppressPackageStartupMessages(
pacman::p_load(
tidyverse, data.table, readxl, readr, ggcorrplot, cowplot,
RColorBrewer, scales, nortest, xlsx,
skimr, xtable, geobr, sf, ggrepel, abjutils, grDevices
)
)
))
cores_estat <- c(
"#A11D21", "#003366", "#CC9900", "#663333", "#FF6600",
"#CC9966", "#999966", "#006606", "#008091", "#041835",
"#666666")
theme_estat <- function(...) {
theme <- ggplot2::theme_bw() +
ggplot2::theme(
axis.title.y = ggplot2::element_text(colour = "black", size = 10),
axis.title.x = ggplot2::element_text(colour = "black", size = 10),
axis.text = ggplot2::element_text(colour = "black", size = 10),
panel.border = ggplot2::element_blank(),
axis.line = ggplot2::element_line(colour = "black"),
text = element_text(family = "sans", size = 12),
legend.position = "top",
...
)
return(
list(
theme,
scale_fill_manual(values = cores_estat),
scale_colour_manual(values = cores_estat),
scale_y_continuous(
labels = scales::number_format(decimal.mark = ',',
#accuracy = 0.01,
big.mark = "."))
)
)
}
Athenas <- (read_excel("~/PS/Olimpiadas 2000 - 2016.xlsx", sheet =1))
London <- (read_excel("~/PS/Olimpiadas 2000 - 2016.xlsx", sheet =2))
Rio <- (read_excel("~/PS/Olimpiadas 2000 - 2016.xlsx", sheet =3))
Sydney <- (read_excel("~/PS/Olimpiadas 2000 - 2016.xlsx", sheet =4))
Beijing <- (read_excel("~/PS/Olimpiadas 2000 - 2016.xlsx", sheet =5))
colnames(Athenas)[colnames(Athenas) == "Names"] <- "Name"
colnames(Athenas)[colnames(Athenas) == "Gender"] <- "Sex"
colnames(Athenas)[colnames(Athenas) == "Height (cm)"] <- "Height"
colnames(Athenas)[colnames(Athenas) == "Weight (lbs)"] <- "Weight"
Athenas$Year <- 2004
colnames(Beijing)[colnames(Beijing) == "Names"] <- "Name"
Beijing$Year <- 2008
London$Year <- 2012
colnames(Rio)[colnames(Rio) == "Age_year"] <- "Age"
colnames(Rio)[colnames(Rio) == "Height_cm"] <- "Height"
colnames(Rio)[colnames(Rio) == "Weight_lbs"] <- "Weight"
colnames(Rio)[colnames(Rio) == "Country"] <- "Team"
Rio$Year <- 2016
colnames(Sydney)[colnames(Sydney) == "N4m3"] <- "Name"
colnames(Sydney)[colnames(Sydney) == "S3x"] <- "Sex"
colnames(Sydney)[colnames(Sydney) == "4g3"] <- "Age"
colnames(Sydney)[colnames(Sydney) == "H31ght"] <- "Height"
colnames(Sydney)[colnames(Sydney) == "W31ght"] <- "Weight"
colnames(Sydney)[colnames(Sydney) == "T34m"] <- "Team"
colnames(Sydney)[colnames(Sydney) == "Sp0rt"] <- "Sport"
colnames(Sydney)[colnames(Sydney) == "3v3nt"] <- "Event"
colnames(Sydney)[colnames(Sydney) == "M3d4l"] <- "Medal"
Sydney$Year <- 2000
Olimpiadas <- rbind(Athenas, Beijing, London, Rio, Sydney)
Medalhistas_mulheres <- Olimpiadas %>%
filter(Sex == "F" & !is.na(Medal)) %>%
group_by(Team) %>%
summarise(total_medalhas = n()) %>%
arrange(desc(total_medalhas))
top_5 <- head(Medalhistas_mulheres, 5)
top_5_grafico <- ggplot(top_5, aes(x = reorder(Team, total_medalhas), y = total_medalhas)) +
geom_bar(stat = "identity", fill = "#a11d21") +  # Cor das barras
coord_flip() +
labs(title =,
x = "País",
y = "Número de Medalhas") +
theme_estat() +
geom_text(aes(label = total_medalhas),
position = position_stack(vjust = 1),
hjust = -0.1,  # Ajuste horizontal para posicionar o texto
color = "black")  # Cor do texto
print(top_5_grafico)
Olimpiadas$Weight_kg <- Olimpiadas$Weight * 0.453592  # Converter peso para kg
Olimpiadas$Height_m <- Olimpiadas$Height / 100     # Converter altura para m
Olimpiadas$IMC <- Olimpiadas$Weight_kg / (Olimpiadas$Height_m^2)# Calcular IMC
esportes_desejados <- c("Gymnastics", "Football", "Judo", "Athletics", "Badminton")
IMC_filtrado <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%  # Filtra os esportes
group_by(Sport) %>%                        # Agrupa por esporte
summarise(
media_imc = mean(IMC, na.rm = TRUE),      # Média do IMC
sd_imc = sd(IMC, na.rm = TRUE),          # Desvio padrão do IMC
n = n()                                   # Número de atletas por esporte
)
IMC_por_esporte_grafico <- ggplot(Olimpiadas %>% filter(Sport %in% esportes_desejados), aes(x = Sport, y = IMC)) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 2, fill = "white"
) +
labs(x = "Esportes",
y = "IMC") +
scale_x_discrete(labels = c("Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô")) +
theme_estat()
tabela_IMC <- Olimpiadas %>%
filter(Sport %in% esportes_desejados) %>%
group_by(Sport) %>%
summarise(
Media_IMC = mean(IMC, na.rm = TRUE),
Variancia_IMC = var(IMC, na.rm = TRUE)
) %>%
mutate(
Sport = recode(Sport,
"Badminton" = "Badminton",
"Athletics" = "Atletismo",
"Gymnastics" = "Ginástica",
"Judo" = "Judô"),
Media_IMC = round(Media_IMC, 2),
Variancia_IMC = round(Variancia_IMC, 2)
) %>%
rename(
Esporte = Sport,
`Média IMC` = Media_IMC,
`Variância IMC` = Variancia_IMC
)
# 1. Contar frequências dos nomes
contagem_nomes <- medalhistas %>%
group_by(nome) %>%
summarise(frequencia = n()) %>%
arrange(desc(frequencia))
medalhas_top3 <- Olimpiadas %>%
filter(Name %in% top3_nomes$Name) %>%
group_by(Name) %>%
summarise(total_medalhas = sum(Medal))
