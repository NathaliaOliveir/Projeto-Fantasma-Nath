#Pacotes

library(readxl)
library(dplyr)
library(ggplot2)

# Importação do banco de dados


Athenas <- (read_excel("PS/Olimpiadas 2000 - 2016.xlsx", sheet =1))
London <- (read_excel("PS/Olimpiadas 2000 - 2016.xlsx", sheet =2))
Rio <- (read_excel("PS/Olimpiadas 2000 - 2016.xlsx", sheet =3))
Sydney <- (read_excel("PS/Olimpiadas 2000 - 2016.xlsx", sheet =4))
Beijing <- (read_excel("PS/Olimpiadas 2000 - 2016.xlsx", sheet =5))

#Padronização das Colunas por Name, Sex, Age, Height, Weight, Team, Sport, Event, Medal e Year 

colnames(Athenas)[colnames(Athenas) == "Names"] <- "Name"
colnames(Athenas)[colnames(Athenas) == "Gender"] <- "Sex"
colnames(Athenas)[colnames(Athenas) == "Height (cm)"] <- "Height"
colnames(Athenas)[colnames(Athenas) == "Weight (lbs)"] <- "Weight"
Athenas$Year <- 2004

colnames(Beijing)[colnames(Beijing) == "Names"] <- "Name"
Beijing$Year <- 2008

London$Year <- 2012

colnames(Rio)[colnames(Rio) == "Age_year"] <- "Age"
colnames(Rio)[colnames(Rio) == "Height_cm"] <- "Height"
colnames(Rio)[colnames(Rio) == "Weight_lbs"] <- "Weight"
colnames(Rio)[colnames(Rio) == "Country"] <- "Team"
Rio$Year <- 2016

colnames(Sydney)[colnames(Sydney) == "N4m3"] <- "Name"
colnames(Sydney)[colnames(Sydney) == "S3x"] <- "Sex"
colnames(Sydney)[colnames(Sydney) == "4g3"] <- "Age"
colnames(Sydney)[colnames(Sydney) == "H31ght"] <- "Height"
colnames(Sydney)[colnames(Sydney) == "W31ght"] <- "Weight"
colnames(Sydney)[colnames(Sydney) == "T34m"] <- "Team"
colnames(Sydney)[colnames(Sydney) == "Sp0rt"] <- "Sport"
colnames(Sydney)[colnames(Sydney) == "3v3nt"] <- "Event"
colnames(Sydney)[colnames(Sydney) == "M3d4l"] <- "Medal"
Sydney$Year <- 2000

Olimpiadas <- rbind(Athenas, Beijing, London, Rio, Sydney)

## Analise 1 - Top paises medalhistas

Medalhistas_mulheres <- Olimpiadas %>%
  filter(Sex == "F" & !is.na(Medal)) %>%
  group_by(Team) %>%
  summarise(total_medalhas = n()) %>%
  arrange(desc(total_medalhas))

top_25 <- head(Medalhistas_mulheres, 25)

top_25_grafico <- ggplot(top_25, aes(x = reorder(Team, total_medalhas), y = total_medalhas)) + 
  geom_bar(stat = "identity", fill = "#a11d21") +  # Cor das barras
   coord_flip() +
  labs(title = "Top 20 Países com Mais Medalhistas Mulheres",
       x = "País",
       y = "Número de Medalhas") +
  theme_minimal()

#Anaise 1- Medalhas por numero de mulheres

dados_femininos <- Olimpiadas %>%
  filter(Sex == "F")

medalhas_por_pais <- dados_femininos %>%
  filter(!is.na(Medal)) %>%  # Filtrar apenas as linhas com medalhas
  group_by(Team) %>%
  summarise(total_medalhas = n(), .groups = 'drop')

total_competidoras_por_pais <- dados_femininos %>%
  group_by(Team) %>%
  summarise(total_competidoras = n(), .groups = 'drop')

resultado <- medalhas_por_pais %>%
  left_join(total_competidoras_por_pais, by = "Team") %>%
  mutate(razao_medalhas_por_competidora = total_medalhas / total_competidoras)

resultado_top25 <- resultado %>%
  slice_max(razao_medalhas_por_competidora, n = 25)

# Visualizar os resultados
print(resultado_top25)

# Criar um gráfico de barras para visualizar a razão de medalhas por competidora
resultado_top25_grafico <- ggplot(resultado_top25, aes(x = reorder(Team, -razao_medalhas_por_competidora), y = razao_medalhas_por_competidora)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Top 25 Países: Razão de Medalhas por Competidora",
       x = "País",
       y = "Razão de Medalhas por Competidora") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

